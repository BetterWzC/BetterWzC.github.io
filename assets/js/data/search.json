[ { "title": "Jasmine 技巧总结", "url": "/posts/Jasmine%E6%8A%80%E6%9C%AF%E6%80%BB%E7%BB%93/", "categories": "工作, 前端", "tags": "Jasmine, Angular, UT", "date": "2021-11-17 16:56:00 +0800", "snippet": "基本结构-Service//example.service.ts@Injectable({ providedIn: &quot;root&quot;})export class ExampleService { constructor(private service_1: Service_1,private service_2: Service_2) {}}//example.service.spec.tsdescribe(&quot;ExampleService&quot;, () =&amp;gt; { let injector: TestBed; let exampleService: ExampleService; beforeEach(() =&amp;gt; { TestBed.configureTestingModule({ providers: [ExampleService,MockProvider(Service_1),MockProvider(Service_2)], schemas: [NO_ERRORS_SCHEMA] }); injector = getTestBed(); exampleService = injector.inject(ExampleService); }); afterEach(MockReset); it(&quot;should be created&quot;, () =&amp;gt; { expect(exampleService).toBeDefined(); });});如何 spyOn Jquery 的方法//example const bindSpy = spyOn&amp;lt;any&amp;gt;($.fn, &quot;bind&quot;).and.callFake((name, callback) =&amp;gt; { events[name] = callback; return $.fn; });如何写返回值为 promise 方法的 UT//source codepublic example = (): Promise&amp;lt;void&amp;gt; =&amp;gt; { return this.exampleService .fun1() .then(() =&amp;gt; { return this.exampleService.fun2(); //fun2 return Promise&amp;lt;exampleClass&amp;gt; }) .then((Data: exampleClass) =&amp;gt; { console.log(Data) });};//UTlet fun1Spy = spyOn&amp;lt;any&amp;gt;(instance[&quot;exampleService&quot;],fun1).and.callFake(async () =&amp;gt; { return Promise.resolve(); })let fun2Spy = pyOn&amp;lt;any&amp;gt;(instance[&quot;exampleService&quot;],fun1).and.callFake(async () =&amp;gt; { return Promise.resolve({} as exampleClass); })it(&quot;test&quot;, async ()=&amp;gt;{ let ret = instance.example() await ret// expect code})" } ]
